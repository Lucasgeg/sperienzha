generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model log {
  id_log  Int       @id @default(autoincrement())
  id_user Int?
  action  String?   @db.VarChar
  date    DateTime? @default(dbgenerated("CURRENT_DATE")) @db.Date
  user    user?     @relation(fields: [id_user], references: [id_user], onDelete: NoAction, onUpdate: NoAction)
}

model match {
  id_match      Int   @id @default(autoincrement())
  id_user       Int?
  id_user_autre Int?
  user          user? @relation(fields: [id_user], references: [id_user], onDelete: NoAction, onUpdate: NoAction)
}

model msg {
  id_msg      Int       @id @default(autoincrement())
  id_user     Int?
  message     String?   @db.VarChar(500)
  date_envoie DateTime? @db.Date
  id_user_r   Int?
  user        user?     @relation(fields: [id_user], references: [id_user], onDelete: NoAction, onUpdate: NoAction)
}

model sanction {
  id_sanction       Int       @id @default(autoincrement())
  id_user           Int?
  raison            String?   @db.VarChar(500)
  jour_sanction     DateTime? @default(dbgenerated("CURRENT_DATE")) @db.Date
  jour_fin_sanction DateTime? @db.Date
  user              user?     @relation(fields: [id_user], references: [id_user], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id_user             Int           @id @default(autoincrement())
  nom                 String?       @db.VarChar(30)
  prenom              String?       @db.VarChar(30)
  age                 Int?
  photo               String?       @db.VarChar
  description         String?       @db.VarChar(1500)
  ecole               String?       @db.VarChar(30)
  niveau_scolaire     String?       @db.VarChar(30)
  genre               String?       @db.VarChar
  personne_lie        Int?
  email               String        @unique @db.VarChar
  clerk_id            String        @unique @db.VarChar
  first_connection    Boolean       @default(true)
  connection_autorise Boolean?      @default(true)
  date_inscription    DateTime?     @default(dbgenerated("CURRENT_DATE")) @db.Date
  criteres            UserCritere[]
  log                 log[]
  match               match[]
  msg                 msg[]
  sanction            sanction[]
}

model critere {
  id_critere Int           @id @default(autoincrement())
  type       String        @db.VarChar
  name       String        @db.VarChar
  users      UserCritere[]
}

model UserCritere {
  id        Int     @id @default(autoincrement())
  userId    Int
  critereId Int
  critere   critere @relation(fields: [critereId], references: [id_critere])
  user      user    @relation(fields: [userId], references: [id_user])
}
